# ==============================================
# ProdigyHub TMF API Backend - Production Environment
# Render Deployment Configuration
# ==============================================

# ==============================================
# SERVER CONFIGURATION
# ==============================================

# Port (Render will automatically set this, but we provide a fallback)
PORT=3000

# Environment mode
NODE_ENV=production

# Base URL for the API (UPDATED for Render deployment)
BASE_URL=https://prodigyhub.onrender.com

# ==============================================
# SECURITY CONFIGURATION
# ==============================================

# CORS allowed origins (comma-separated) - Updated for production
ALLOWED_ORIGINS=https://prodigyhub.onrender.com,http://localhost:3000,http://localhost:3001,http://localhost:8080,https://your-frontend-domain.com

# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=900000        # 15 minutes in milliseconds
RATE_LIMIT_MAX_REQUESTS=1000       # Max requests per window per IP

# Trust proxy (IMPORTANT for Render)
TRUST_PROXY=true

# ==============================================
# TMF API SPECIFIC CONFIGURATION
# ==============================================

# TMF620 - Product Catalog Management
TMF620_VERSION=v5
TMF620_BASE_PATH=/productCatalogManagement/v5

# TMF637 - Product Inventory Management  
TMF637_VERSION=v5
TMF637_BASE_PATH=/tmf-api

# TMF679 - Product Offering Qualification
TMF679_VERSION=v5
TMF679_BASE_PATH=/productOfferingQualification/v5

# TMF622 - Product Ordering Management
TMF622_VERSION=v4
TMF622_BASE_PATH=/productOrderingManagement/v4

# TMF688 - Event Management
TMF688_VERSION=v4
TMF688_BASE_PATH=/tmf-api/event/v4

# TMF760 - Product Configuration Management
TMF760_VERSION=v5
TMF760_BASE_PATH=/tmf-api/productConfigurationManagement/v5

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# MongoDB Atlas connection (Your existing connection string)
MONGODB_URI=mongodb+srv://prodigyhub-user:prodigyhub@cluster0.htaz0ag.mongodb.net/prodigyhub?retryWrites=true&w=majority&appName=ProdigyHub

# Enable database connection
ENABLE_DATABASE=true

# Connection Pool Settings (Optimized for production)
DB_MAX_POOL_SIZE=10
DB_MIN_POOL_SIZE=2
DB_SERVER_SELECTION_TIMEOUT=10000
DB_SOCKET_TIMEOUT=0
DB_CONNECT_TIMEOUT=10000

# App Settings
APP_NAME=ProdigyHub-TMF-API

# Enable database monitoring in production
ENABLE_DB_MONITORING=true

# ==============================================
# LOGGING CONFIGURATION
# ==============================================

# Log level for production
LOG_LEVEL=info

# Log format for production
LOG_FORMAT=combined

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# ==============================================
# NOTIFICATION & EVENT CONFIGURATION
# ==============================================

# Event notification settings
ENABLE_EVENTS=true
EVENT_TIMEOUT=30000

# Hub callback timeout (milliseconds)
HUB_CALLBACK_TIMEOUT=10000

# Maximum number of retry attempts for notifications
MAX_NOTIFICATION_RETRIES=3

# ==============================================
# PERFORMANCE CONFIGURATION
# ==============================================

# Request timeout (milliseconds)
REQUEST_TIMEOUT=30000

# Maximum request body size
MAX_REQUEST_SIZE=10mb

# Compression level (1-9, 6 is recommended)
COMPRESSION_LEVEL=6

# Enable request compression (important for performance)
ENABLE_COMPRESSION=true

# ==============================================
# PAGINATION CONFIGURATION
# ==============================================

# Default pagination settings
DEFAULT_PAGE_SIZE=20
MAX_PAGE_SIZE=100
DEFAULT_OFFSET=0

# ==============================================
# VALIDATION CONFIGURATION
# ==============================================

# Strict TMF compliance validation
STRICT_TMF_VALIDATION=true

# Enable field selection validation
VALIDATE_FIELD_SELECTION=true

# Enable request schema validation
ENABLE_SCHEMA_VALIDATION=true

# ==============================================
# INTEGRATION CONFIGURATION
# ==============================================

# External service timeouts
EXTERNAL_SERVICE_TIMEOUT=15000

# Webhook delivery timeout
WEBHOOK_TIMEOUT=10000

# Maximum concurrent webhook deliveries
MAX_CONCURRENT_WEBHOOKS=10

# ==============================================
# MONITORING & HEALTH CHECK CONFIGURATION
# ==============================================

# Health check interval (milliseconds)
HEALTH_CHECK_INTERVAL=60000

# Enable detailed health check responses
DETAILED_HEALTH_CHECK=true

# Memory usage threshold for health warnings (MB)
MEMORY_WARNING_THRESHOLD=512

# ==============================================
# CACHE CONFIGURATION
# ==============================================

# Enable caching for better performance
ENABLE_CACHING=true

# Cache TTL (Time To Live) in seconds
CACHE_TTL=300

# Cache size limit
CACHE_SIZE_LIMIT=1000

# ==============================================
# ERROR HANDLING CONFIGURATION
# ==============================================

# Don't include stack traces in production
INCLUDE_STACK_TRACE=false

# Enable error reporting
ENABLE_ERROR_REPORTING=true

# ==============================================
# FEATURE FLAGS
# ==============================================

# Enable all TMF APIs
ENABLE_TMF620=true
ENABLE_TMF637=true
ENABLE_TMF679=true
ENABLE_TMF622=true
ENABLE_TMF688=true
ENABLE_TMF760=true

# Disable experimental features in production
ENABLE_EXPERIMENTAL_FEATURES=false

# Disable mock data in production
ENABLE_MOCK_DATA=false

# ==============================================
# PRODUCTION CONFIGURATION
# ==============================================

# Graceful shutdown timeout
SHUTDOWN_TIMEOUT=10000

# Cluster mode (let Render handle this)
CLUSTER_WORKERS=1

# ==============================================
# SSL/TLS CONFIGURATION
# ==============================================

# Render handles HTTPS automatically
ENABLE_HTTPS=false

# ==============================================
# API DOCUMENTATION CONFIGURATION
# ==============================================

# Enable API documentation
ENABLE_API_DOCS=true

# API documentation path
API_DOCS_PATH=/docs

# API documentation title
API_DOCS_TITLE=ProdigyHub TMF API Documentation

# ==============================================
# AUTHENTICATION CONFIGURATION (Optional)
# ==============================================

# Uncomment and set these if you want to enable authentication
# JWT_SECRET=your-super-secret-jwt-key-here
# API_KEYS=api-key-1,api-key-2,api-key-3

# Skip authentication in development (DO NOT USE IN PRODUCTION)
# SKIP_AUTH=false

# ==============================================
# CORS CONFIGURATION FOR PRODUCTION
# ==============================================

# Enable CORS credentials
CORS_CREDENTIALS=true

# Strict CORS origins for sensitive operations
STRICT_CORS_ORIGINS=https://prodigyhub.onrender.com,https://your-frontend-domain.com

# ==============================================
# RENDER SPECIFIC CONFIGURATION
# ==============================================

# These are automatically set by Render, but good to document

# RENDER=true                    # Automatically set by Render
# RENDER_SERVICE_ID=srv-xxx      # Automatically set by Render
# RENDER_SERVICE_NAME=xxx        # Automatically set by Render
# RENDER_EXTERNAL_HOSTNAME=xxx   # Automatically set by Render

# ==============================================
# FRONTEND INTEGRATION HELPERS
# ==============================================

# API versioning
API_VERSION=v1.0.0

# Default response format
DEFAULT_RESPONSE_FORMAT=json

# Enable API response compression
API_COMPRESSION=true

# ==============================================
# BACKUP & MONITORING
# ==============================================

# Enable automatic health checks
ENABLE_HEALTH_CHECKS=true

# Health check endpoint
HEALTH_CHECK_PATH=/health

# Enable metrics collection
ENABLE_METRICS=true

# ==============================================
# DEVELOPMENT OVERRIDES (for local testing)
# ==============================================

# Uncomment these for local development testing

# NODE_ENV=development
# BASE_URL=http://localhost:3000
# LOG_LEVEL=debug
# ENABLE_DEV_MIDDLEWARE=true
# INCLUDE_STACK_TRACE=true
# SKIP_AUTH=true